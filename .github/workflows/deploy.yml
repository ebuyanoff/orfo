name: Deploy to REG.RU

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Write version.json
        run: |
          echo "{\"commit\":\"${GITHUB_SHA}\",\"time\":\"$(date -u +%FT%TZ)\"}" > version.json

      - name: Put SSH key and known_hosts
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_KEY:  ${{ secrets.SSH_KEY }}
        run: |
          set -e
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_deploy
          chmod 600 ~/.ssh/id_deploy
          ssh-keyscan -p 22 "$SSH_HOST" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Sanity check: TCP 22 open?
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          set -e
          echo "Testing TCP/22 on $SSH_HOST ..."
          nc -zv "$SSH_HOST" 22

      - name: Test SSH login (verbose) and prepare path
        env:
          SSH_HOST:    ${{ secrets.SSH_HOST }}
          SSH_USER:    ${{ secrets.SSH_USER }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          set -e
          echo "Trying SSH to $SSH_USER@$SSH_HOST ..."
          ssh -vvv -i ~/.ssh/id_deploy -o IdentitiesOnly=yes -o StrictHostKeyChecking=yes \
              "$SSH_USER@$SSH_HOST" "set -e; echo 'connected'; whoami; uname -a; mkdir -p '$DEPLOY_PATH'; ls -ld '$DEPLOY_PATH'"

      - name: Rsync deploy (verbose)
        env:
          SSH_HOST:    ${{ secrets.SSH_HOST }}
          SSH_USER:    ${{ secrets.SSH_USER }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          set -e
          rsync -avz --delete \
            --exclude 'api/config.php' \
            --exclude '.git*' \
            --exclude '.github/' \
            --exclude 'README*' \
            -e "ssh -i ~/.ssh/id_deploy -o IdentitiesOnly=yes -o StrictHostKeyChecking=yes" \
            ./ "$SSH_USER@$SSH_HOST:$DEPLOY_PATH"

      - name: Verify version.json on server
        env:
          SSH_HOST:    ${{ secrets.SSH_HOST }}
          SSH_USER:    ${{ secrets.SSH_USER }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          ssh -i ~/.ssh/id_deploy -o IdentitiesOnly=yes -o StrictHostKeyChecking=yes \
              "$SSH_USER@$SSH_HOST" "sed -n '1p' '$DEPLOY_PATH/version.json' || true"
